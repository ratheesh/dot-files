# Einstellungen für Tmux

# Minimum Tmux version supported: v2.1

# basic_settings {

# default shell
set-option -g default-shell /usr/bin/zsh

# support 256 color and truecolor
# set -g default-terminal "xterm-256color"
set -g default-terminal "wezterm"
# set -ga terminal-overrides ",alacritty,xterm-256color:Tc:smcup@:rmcup@"
set -ag terminal-overrides "xterm-256color,xterm-256color:RGB,gnome*:RGB,vte*:Smulx=\E[4\:%p1%dm"
# set -as terminal-overrides ',vte*:Smulx=\E[4\:%p1%dm'
# set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'  # undercurl support
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'  # underscore colors - needs tmux-3.0
# set -ga terminal-overrides '*:Ss=\E[%p1%d q:Se=\E[ q'

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"

# Make default prefix to Ctrl-a
unbind-key C-b
set -g prefix C-a
bind-key C-a send-prefix

# }

# keybindings {

# Reload source file
bind-key r source-file ~/.tmux.conf \; display-message "Configuration reloaded"
bind-key Space last-window
bind-key C-Space next-layout
unbind-key -T root F11
unbind-key -T root F12
bind-key -n F11 previous-window
bind-key -n F12 next-window

# Allow repeats for next/prev window
bind-key -r n next-window
bind-key -r p previous-window

# Remap the vertical and horizontal split to '|' and '-' respectively
bind-key | split-window -h -c "#{pane_current_path}"
bind-key - split-window -v -c "#{pane_current_path}"
unbind "%"
unbind '"'

unbind Tab
unbind S-Tab
bind-key -r Tab select-pane -t:.+
bind-key -r C-o select-pane -t:.-

# switch pane without zoom
bind-key -r '\' select-pane -t .+1 \;  resize-pane -Z

# show next pane layout
# bind-key / next-layout # Overridden

# Synchronize panes
bind-key * set-window-option synchronize-pane

# make sure that the new window open in the same path as current active window
bind-key c new-window -c "#{pane_current_path}"

# Make the current window the first window
bind-key T swap-window -t 1

# keys for resizing panes - these are repeatable
bind-key -r h resize-pane -L 1\; refresh-client -S
bind-key -r l resize-pane -R 1\; refresh-client -S
bind-key -r j resize-pane -D 1\; refresh-client -S
bind-key -r k resize-pane -U 1\; refresh-client -S

# swap current window to immediate neighbor without focus on current
# window. '-d' option should be passed for tmux v.3.0 and above for this to work
bind-key -r > swap-window -d -t :+
bind-key -r < swap-window -d -t :-

bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# bind < split-window -h \; choose-window 'kill-pane ; join-pane -hs %%'

# switch sessions
bind-key -r ( switch-client -p
bind-key -r ) switch-client -n

# Clear scrollback buffer
bind-key C-k send-keys C-l \; clear-history

# Hide/Unhide status bar
bind-key G set status

# pane movement
# bind-key @ command-prompt -p "join pane from:"  "join-pane -s '%%'"
# bind-key S command-prompt -p "send pane to:"  "join-pane -t '%%'"
bind-key J choose-tree "join-pane -s '%%'"
bind-key S choose-tree "join-pane -t '%%'"

# Copy mode
# bind-key Escape copy-mode
unbind Escape
bind-key [ copy-mode
bind-key ] paste-buffer

# Choose buffer to paste
bind-key P choose-buffer
# }

# Common settings {

set -g status-keys vi
set -gw mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'y' send -X copy-selection-and-cancel
set -gw mode-style 'bg=colour236,fg=colour7,italics' # copy mode customization
bind y run-shell "tmux show-buffer | xclip -sel clip -i" \; display-message "Copied tmux buffer to system clipboard"

# For tmux > v2.1
set-option -g mouse on

# Start window indexing at one instead of zero
set -g base-index 1
setw -g pane-base-index 1

# Renumber windows upon window deletion
set -g renumber-windows on

# window list justification
set -g status-justify left

# Alternate screen configuration for rmcpu and smcup
set -g alternate-screen on

# Set the history limit to 10k lines
set -g history-limit 50000

# Repeat time limit (ms)
set-option -g repeat-time 200

# pane switch timeout
set -g display-panes-time 2000

# Shorten command delay
set -sg escape-time 2
# Set -g display-time 2000

# set -g default-command "reattach-to-user-namespace -l zsh"

# Pane number display time. Cancel by typing anykey.
# set display-panes-time 4000

set -g aggressive-resize on

# Tabs
set-option -g set-titles on
set-option -g set-titles-string '[#S:#I:#P #H][PWD: #{pane_current_path}]'
set -gw xterm-keys on # to make ctrl-arrow, etc. work

# No title renames please
set -g automatic-rename off
set -g allow-rename off

set -g status on
set -g status-interval 1

# }

# Misc settings {
# set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

# Clock-mode
set -gw clock-mode-colour cyan
set -gw clock-mode-style 12

# Load screensaver type of config for idle.
# Make sure to install required program before
# set -g lock-after-time 600
# set -g lock-command "/usr/local/bin/asciiquarium"
# set -g lock-command "/usr/bin/cmatrix -a -b -f -s -C red"

# Status bar position - default is bottom
#set-option -g status-position top

# for apps which wants to capture focus events
set -g focus-events on

# }

# windows_eyecandy {

# set-option -g status-attr dim

# set colors for panel borders
set -g pane-border-lines single #  options -> heavy, double, simple, number, dashes(custom changes required)
set -g pane-border-style bold
set -g pane-border-status top
set -g pane-border-format " #{?pane_active,#[fg=colour198 bold],#[fg=colour60]}#{pane_index} \
#{?pane_active,#[fg=colour142 italics],#[fg=colour60 noitalics]}#{pane_current_command}#[noitalics]\
#{?pane_input_off,#{?pane_active,#[fg=colour8]\[#[fg=colour27 bold]RO#[fg=colour8 nobold]\],},}\
#{?pane_active,#[fg=colour33],#[fg=colour60]} ──\
#{?pane_in_mode,#[fg=colour68 bold] ⧉  ,}#[align=right]#[fg=colour8]\[\
#{?pane_active,#[fg=colour66 italics],#[fg=colour60]}#{pane_tty}#[fg=colour8 noitalics]\]\
#{?pane_active,#[fg=colour33],#[fg=colour60]}──#[fg=colour8]\[\
#{?pane_active,#[fg=colour127]#{pane_width}#[fg=colour60]x#[fg=colour31]#{pane_height},\
#[fg=colour60]#{pane_width}x#{pane_height}}#[fg=colour8]\]#{?pane_active,#[fg=colour33],#[fg=colour60]}─\
#{?pane_pipe,#{?pane_active,#[fg=colour33 bold] ||──#[nobold],──},}\
#{?pane_synchronized,#[fg=colour198 bold]<<#[fg=colour68 nobold italics]Sync\
#[fg=colour198 bold noitalics]>>,}"

# Add following line when we upgrade to tmux v2.6
#{?pane_pipe,#{?pane_active,#[fg=colour27 bold] ||#[nobold],},}\

# colorize messages in the command line
set -g status-left-length 50

set -g monitor-activity on
set -g visual-activity off

set -g pane-border-style fg=colour60,bg=colour0
set -g pane-active-border-style fg=colour33,bg=colour0
set -g message-style bg=colour16,fg=colour26
set -g status-style fg=colour16,bg=colour235
set -g window-status-style fg=colour7,bg=colour234
set -gw window-status-activity-style blink

# tmux >=2.9 settings -> put this under condition block based on the version
set -g pane-border-style fg=colour60,bg=colour0
set -g pane-active-border-style fg=colour33,bg=colour0
set -g message-style bg=colour16,fg=colour26
set -g status-style fg=colour16,bg=colour235
set -g window-status-style fg=colour7,bg=colour234
set -gw window-status-activity-style blink

setw -g window-status-separator ""
setw -g status-left '#[fg=colour24 bg=colour248]▐#[fg=colour15,bg=colour24] #[fg=colour208,bg=colour24,bold,italics]#S#[fg=colour24,bg=colour235] #[default]'

setw -g window-status-format "#{?window_start_flag,#[fg=colour241 bg=colour235],#[fg=colour241 bg=colour238]}\
#[fg=colour231,bg=colour241,nobold]#I #[fg=colour241,bg=colour238]\
#[bg=colour238,fg=colour7] #W#[fg=colour178,bold]#{?window_last_flag, ,}#{?window_marked_flag,󰃃 ,}#{?window_activity_flag, ,}#{?window_bell_flag, ,}#{?window_silence_flag,󰝟 ,}#{?window_zoomed_flag,󰨤 ,}#{?window_end_flag,#[fg=colour238 bg=colour235],} #[default]"

setw -g window-status-current-format "#{?window_start_flag,#[fg=colour25 bg=colour235],#[fg=colour25 bg=colour238]}\
#[fg=colour15,bg=colour25,nobold]#I #[fg=colour25,bg=colour181]\
#[fg=colour16,bg=colour181,bold,italics] #W#[fg=colour88,noitalics,bold]#{?window_active,,}#{?window_marked_flag,󰃃 ,}#{?window_activity_flag, ,}#{?window_bell_flag, ,}#{?window_silence_flag,󰝟 ,}#{?window_zoomed_flag,󰨤 ,}\
#{?window_end_flag,#[fg=colour181 bg=colour235],#[fg=colour181 bg=colour238]}#[default]"

#            🚀  ● •
#        
# 󰈈 󰎂 󱀅 󰓦 󰓹    󰨤 󰃃 󰛐 󱈸  󰝟 🔔 🟥 🟦 🟧 🟨 🟩 🟪 🟫 🔵

set -g status-right-length 150
set -g status-right '#{?client_prefix,#[fg=colour178 nobold]⌨  #[default],}\
#{?pane_in_mode,#[fg=colour68 bold]⧉  #[default],}\
#[fg=colour60,nobold]│\
#[nobold]#($HOME/.tmux/tmux.netspeed.sh)#[fg=colour60,nobold]│\
#[fg=colour165,nobold,italics]%a \
#[fg=colour6,noitalics,nobold]%d#[fg=colour196,bold]-#[fg=colour174,italics,nobold]%b\
#[fg=colour196,noitalics,bold]-#[fg=colour12,nobold]%Y#[fg=colour60,nobold]│\
#[fg=colour35,nobold]%I#[fg=colour196,bold]:#[fg=colour33,nobold]%M\
#[fg=colour60,italics,bold]%P \
#[fg=colour64,noitalics,nobold]%Z#[fg=colour60,nobold,noitalics]│\
#[fg=colour138,nobold]#($HOME/.tmux/tmux.cpu.sh)\
#[fg=colour60,nobold]│#($HOME/.tmux/tmux.netstat.sh)#[fg=colour235 bg=colour244]▌#[default]'

#[fg=colour130,nobold]Wk#[fg=colour196,bold]-#[fg=colour103,nobold,noitalics]%V \

# windows_eyecandy }

#plugins {

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-copycat'
# set -g @plugin 'alexwforsythe/tmux-which-key'
set -g @plugin 'ratheesh/tmux-digit'

# automagically install tmux plugin manager
run-shell '/usr/bin/env bash -c "[ -d """~/.tmux/plugins""" ] || mkdir """~/.tmux/plugins""";"'
run-shell '/usr/bin/env bash -c "[ -d """~/.tmux/plugins/tpm"""] || git clone --filter=blob:none """https://github.com/tmux-plugins/tpm""" """~/.tmux/plugins/tpm""" || true"'
run -b '~/.tmux/plugins/tpm/tpm'

# plugins }

# things to refer

# I -> window no. #P -> panel no.
# Dump tmux colors
# for i in {0..255} ; do
#     printf "\x1b[38;5;${i}mcolour${i}\n"
# done

# Dump tmux colors with background
# for i in {0..255}; do
#     printf "\x1b[38;5;${i}mcolour${i} \x1b[48;5;${i}m          \x1b[0m\n"
# done

# vim: set ft=tmux ff=unix ts=4 sw=4 tw=0 expandtab:
# ► ● ✱
# Das Ende der Datei
